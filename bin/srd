#!/bin/bash

HERE=$( dirname -- "$( realpath -- "$0"; )"; )
BASE=$( realpath -- "$HERE/../" )
TEMPLATES_DIR="$BASE/templates"
DATA_DIR="$BASE/data"

containsElement () (
	local e match="$1"
	shift
	for e; do [[ "$e" == "$match" ]] && return 0; done
	return 1
)
help () (
	messages=(
		"srd <command>\n"
		"\t- help / --help / -h: Displays this message.\n"
		"\t- make: Creates a new data/content object.\n"
		"\t- build: Converts YML data to Rust code.\n"
		"\t- run: Runs the game.\n"
		"\t- debug: Runs the game with backtrace displayed on error.\n"
		"srd make <ObjectType>\n"
		"\tObjectType: Conversation, Exit, Item, Location, Person, Vending\n"
	)
	printf "${messages[*]}"
)
error() (
	local error_message=$1
	printf "Error: $error_message\n\n"
	help
	exit 1
)
get_id() (
	date +%s
)

HELP_OPTIONS=("help" "--help" "-h")

command=$1
if $(containsElement "$command" "${HELP_OPTIONS[@]}"); then
	help
elif [[ "$command" == "make" ]]; then
	next_id=$(get_id)
	template_kind="$2"
	if [[ -z "$template_kind" ]];then
		error "No object type provided"
	fi
	template_file="$TEMPLATES_DIR/$template_kind.yml"
	if [[ -f "$template_file" ]]; then
		FILE_NAME="$DATA_DIR/$next_id.yml"
		sed "s/\$SRD_ID0/$next_id/" $template_file > $FILE_NAME
		if [[ "$template_kind" == "conversation" ]]; then
			id=$(($next_id))
			id=$(($id+1))
			sed -i "s/\$SRD_ID1/$id/" $FILE_NAME
			id=$(($id+1))
			sed -i "s/\$SRD_ID2/$id/" $FILE_NAME
		fi
		echo "$DATA_DIR/$next_id.yml"
	else
		error "No type '$template_kind'"
	fi
elif [[ "$command" == "build" ]]; then
	cd builder
	cargo run
	cd ..
elif [[ "$command" == "debug" ]]; then
	cd game
	RUST_BACKTRACE=1 cargo run
	cd ..
elif [[ "$command" == "run" ]]; then
	cd game
	cargo run
	cd ..
else
	error "No arguments given"
fi
